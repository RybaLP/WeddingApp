"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    render: function() {
        return render;
    },
    default: function() {
        return _default;
    }
});
var _core = /*#__PURE__*/ _interopRequireDefault(require("@bbob/core"));
var _pluginHelper = require("@bbob/plugin-helper");
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var _typeof = function(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
};
var SELFCLOSE_END_TAG = "/>";
var CLOSE_START_TAG = "</";
var START_TAG = "<";
var END_TAG = ">";
var renderNode = function(node, param) {
    var _param_stripTags = param.stripTags, stripTags = _param_stripTags === void 0 ? false : _param_stripTags;
    if (!node) return "";
    var type = typeof node === "undefined" ? "undefined" : _typeof(node);
    if (type === "string" || type === "number") {
        return node;
    }
    if (type === "object") {
        if (stripTags === true) {
            // eslint-disable-next-line no-use-before-define
            return renderNodes(node.content, {
                stripTags: stripTags
            });
        }
        if (node.content === null) {
            return [
                START_TAG,
                node.tag,
                (0, _pluginHelper.attrsToString)(node.attrs),
                SELFCLOSE_END_TAG
            ].join("");
        }
        // eslint-disable-next-line no-use-before-define
        return [
            START_TAG,
            node.tag,
            (0, _pluginHelper.attrsToString)(node.attrs),
            END_TAG,
            renderNodes(node.content),
            CLOSE_START_TAG,
            node.tag,
            END_TAG
        ].join("");
    }
    if (Array.isArray(node)) {
        // eslint-disable-next-line no-use-before-define
        return renderNodes(node, {
            stripTags: stripTags
        });
    }
    return "";
};
var renderNodes = function(nodes, param) {
    var _ref = param === void 0 ? {} : param, _ref_stripTags = _ref.stripTags, stripTags = _ref_stripTags === void 0 ? false : _ref_stripTags;
    return [].concat(nodes).reduce(function(r, node) {
        return r + renderNode(node, {
            stripTags: stripTags
        });
    }, "");
};
var toHTML = function(source, plugins, options) {
    return (0, _core.default)(plugins).process(source, _extends({}, options, {
        render: renderNodes
    })).html;
};
var render = renderNodes;
var _default = toHTML;
