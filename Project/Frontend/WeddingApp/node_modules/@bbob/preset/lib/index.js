/* eslint-disable indent */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createPreset: function() {
        return createPreset;
    },
    default: function() {
        return _default;
    }
});
var isTagNode = function(el) {
    return typeof el === "object" && !!el.tag;
};
function process(tags, tree, core, options) {
    tree.walk(function(node) {
        return isTagNode(node) && tags[node.tag] ? tags[node.tag](node, core, options) : node;
    });
}
/**
 * Creates preset for @bbob/core
 * @param defTags {Object}
 * @param processor {Function} a processor function of tree
 * @returns {function(*=): function(*=, *=): void}
 */ function createPreset(defTags, processor) {
    if (processor === void 0) processor = process;
    var presetFactory = function(opts) {
        if (opts === void 0) opts = {};
        presetFactory.options = Object.assign(presetFactory.options || {}, opts);
        var presetExecutor = function(tree, core) {
            return processor(defTags, tree, core, presetFactory.options);
        };
        presetExecutor.options = presetFactory.options;
        return presetExecutor;
    };
    presetFactory.extend = function(callback) {
        return createPreset(callback(defTags, presetFactory.options), processor);
    };
    return presetFactory;
}
var _default = createPreset;
