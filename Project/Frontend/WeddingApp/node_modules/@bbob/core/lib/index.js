"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return bbob;
    }
});
var _parser = require("@bbob/parser");
var _utils = require("./utils");
function walk(cb) {
    return (0, _utils.iterate)(this, cb);
}
function bbob(plugs) {
    var plugins = typeof plugs === "function" ? [
        plugs
    ] : plugs || [];
    var options = {
        skipParse: false
    };
    return {
        process: function process(input, opts) {
            options = opts || {};
            var parseFn = options.parser || _parser.parse;
            var renderFn = options.render;
            var data = options.data || null;
            if (typeof parseFn !== "function") {
                throw new Error('"parser" is not a function, please pass to "process(input, { parser })" right function');
            }
            var tree = options.skipParse ? input || [] : parseFn(input, options);
            // raw tree before modification with plugins
            var raw = tree;
            tree.messages = [];
            tree.options = options;
            tree.walk = walk;
            tree.match = _utils.match;
            plugins.forEach(function(plugin) {
                tree = plugin(tree, {
                    parse: parseFn,
                    render: renderFn,
                    iterate: _utils.iterate,
                    match: _utils.match,
                    data: data
                }) || tree;
            });
            return {
                get html () {
                    if (typeof renderFn !== "function") {
                        throw new Error('"render" function not defined, please pass to "process(input, { render })"');
                    }
                    return renderFn(tree, tree.options);
                },
                tree: tree,
                raw: raw,
                messages: tree.messages
            };
        }
    };
}
